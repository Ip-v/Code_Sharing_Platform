type: edu
files:
- name: src/platform/CodeSharingPlatform.java
  visible: true
  text: |
    package platform;

    import org.springframework.boot.SpringApplication;
    import org.springframework.boot.autoconfigure.SpringBootApplication;
    import org.springframework.web.bind.annotation.RestController;

    @SpringBootApplication
    @RestController
    public class CodeSharingPlatform {

        public static void main(String[] args) {
            SpringApplication.run(CodeSharingPlatform.class, args);
        }

    }
  learner_created: false
- name: build.gradle
  visible: true
  text: |
    plugins {
        id 'org.springframework.boot' version '2.3.3.RELEASE'
        id 'java'
    }

    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 11

    repositories {
        mavenCentral()
    }

    sourceSets.main.resources.srcDirs = ["src/resources"]

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        compile("org.springframework.boot:spring-boot-starter-web")
    }
  learner_created: false
- name: src/resources/application.properties
  visible: true
  text: |
    server.port=8889
    management.endpoints.web.exposure.include=*
    management.endpoint.shutdown.enabled=true
  learner_created: false
- name: test/CodeSharingPlatformTest.java
  visible: false
  text: |
    import com.google.gson.JsonArray;
    import com.google.gson.JsonObject;
    import org.hyperskill.hstest.dynamic.input.DynamicTesting;
    import org.hyperskill.hstest.dynamic.input.DynamicTestingMethod;
    import org.hyperskill.hstest.exception.outcomes.PresentationError;
    import org.hyperskill.hstest.exception.outcomes.WrongAnswer;
    import org.hyperskill.hstest.mocks.web.response.HttpResponse;
    import org.hyperskill.hstest.stage.SpringTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.jsoup.Jsoup;
    import org.jsoup.nodes.Document;
    import org.jsoup.nodes.Element;
    import org.jsoup.select.Elements;
    import platform.CodeSharingPlatform;

    import java.util.HashMap;
    import java.util.Map;

    import static org.hyperskill.hstest.common.Utils.sleep;
    import static org.hyperskill.hstest.testing.expect.Expectation.expect;
    import static org.hyperskill.hstest.testing.expect.json.JsonChecker.isArray;
    import static org.hyperskill.hstest.testing.expect.json.JsonChecker.isInteger;
    import static org.hyperskill.hstest.testing.expect.json.JsonChecker.isObject;
    import static org.hyperskill.hstest.testing.expect.json.JsonChecker.isString;

    public class CodeSharingPlatformTest extends SpringTest {
        public CodeSharingPlatformTest() {
            super(CodeSharingPlatform.class, "../snippets.mv.db");
        }

        final String API_CODE = "/api/code/";
        final String WEB_CODE = "/code/";

        final String API_CODE_NEW = "/api/code/new";
        final String WEB_CODE_NEW = "/code/new";

        final String API_LATEST = "/api/code/latest";
        final String WEB_LATEST = "/code/latest";

        final String[] SNIPPETS = {
            "public static void ...",
            "class Code { ...",
            "Snippet #3",
            "Snippet #4",
            "Snippet #5",
            "Snippet #6",
            "Snippet #7",
            "Snippet #8",
            "Snippet #9",
            "Snippet #10",
            "Snippet #11",
            "Snippet #12",
            "Snippet #13",
            "Snippet #14",

            "Snippet #15",
            "Snippet #16",
            "Snippet #17",
            "Snippet #18",
            "Snippet #19",
            "Snippet #20",
            "Snippet #21",
            "Snippet #22",
        };

        final Map<Integer, String> ids = new HashMap<>();
        final Map<Integer, String> dates = new HashMap<>();
        final Map<Integer, Integer> secs = new HashMap<>();
        final Map<Integer, Integer> views = new HashMap<>();

        boolean checkSecret = false;
        long freezeTime = 0;
        long awaitTime = 0;
        long sleepDurationSec = 0;
        long sleepLowerBound = 0;
        long sleepUpperBound = 0;

        static String th(int val) {
            if (val == 1) {
                return "" + val + "st";
            } else if (val == 2) {
                return "" + val + "nd";
            } else if (val == 3) {
                return "" + val + "rd";
            } else {
                return "" + val + "th";
            }
        }

        static void checkStatusCode(HttpResponse resp, int status) {
            if (resp.getStatusCode() != status) {
                throw new WrongAnswer(
                    resp.getRequest().getMethod() + " " +
                        resp.getRequest().getLocalUri() +
                        " should respond with status code " + status + ", " +
                        "responded: " + resp.getStatusCode() + "\n\n" +
                        "Response body:\n\n" + resp.getContent()
                );
            }
        }

        static void checkTitle(Document doc, String url, String title) {
            if (!doc.title().equals(title)) {
                throw new WrongAnswer("GET " + url +
                    " should contain title \"" + title + "\"");
            }
        }

        static Element getSingleTag(Element doc, String url, String tag) {
            Elements elems = getElemsByTag(doc, url, tag, 1);
            return elems.get(0);
        }

        static Elements getElemsByTag(Element doc, String url, String tag, int length) {
            Elements elems = doc.getElementsByTag(tag);
            if (elems.size() != length) {
                throw new WrongAnswer("GET " + url +
                    " should contain " + length + " <" + tag + "> " +
                    "element"+ (length == 1 ? "" : "s") +", found: " + elems.size());
            }
            return elems;
        }

        static Element getById(Element doc, String url, String id, String tag) {
            Element elem = doc.getElementById(id);

            if (elem == null) {
                throw new WrongAnswer("GET " + url +
                    " should contain an element with id \"" + id + "\", no one found");
            }

            if (!elem.tagName().equals(tag)) {
                throw new WrongAnswer("GET " + url +
                    " should contain an element with id  \"" + id + "\" and tag \"" + tag + "\", " +
                    "found another tag: \"" + elem.tagName() + "\"");
            }

            return elem;
        }

        static void checkMissingId(Element doc, String url, String id) {
            Element elem = doc.getElementById(id);
            if (elem != null) {
                throw new WrongAnswer("GET " + url +
                    " shouldn't contain an element with id \"" + id + "\", but one was found");
            }
        }

        @DynamicTestingMethod
        public DynamicTesting[] dt = new DynamicTesting[] {
            // test 1
            this::checkWebCodeNew,

            // test 2
            () -> postSnippet(0),
            () -> checkApiCode(0),
            () -> checkWebCode(0),
            () -> checkApiLatest(0),
            () -> checkWebLatest(0),

            // test 7
            () -> postSnippet(1),
            () -> checkApiCode(0),
            () -> checkWebCode(0),
            () -> checkApiCode(1),
            () -> checkWebCode(1),
            () -> checkApiLatest(1, 0),
            () -> checkWebLatest(1, 0),

            // test 14
            () -> postSnippet(2),
            () -> postSnippet(3),
            () -> postSnippet(4),
            () -> postSnippet(5),
            () -> postSnippet(6),
            () -> postSnippet(7),
            () -> postSnippet(8),
            () -> postSnippet(9),
            () -> postSnippet(10),
            () -> postSnippet(11),
            () -> postSnippet(12),
            () -> postSnippet(13),

            // test 26
            () -> checkApiCode(0),
            () -> checkWebCode(0),
            () -> checkApiCode(1),
            () -> checkWebCode(1),
            () -> checkApiCode(2),
            () -> checkWebCode(2),
            () -> checkApiCode(3),
            () -> checkWebCode(3),
            () -> checkApiCode(4),
            () -> checkWebCode(4),
            () -> checkApiCode(5),
            () -> checkWebCode(5),
            () -> checkApiCode(6),
            () -> checkWebCode(6),
            () -> checkApiCode(7),
            () -> checkWebCode(7),
            () -> checkApiCode(8),
            () -> checkWebCode(8),
            () -> checkApiCode(9),
            () -> checkWebCode(9),
            () -> checkApiCode(10),
            () -> checkWebCode(10),
            () -> checkApiCode(11),
            () -> checkWebCode(11),
            () -> checkApiCode(12),
            () -> checkWebCode(12),
            () -> checkApiCode(13),
            () -> checkWebCode(13),

            // test 54
            () -> checkApiLatest(13, 12, 11, 10, 9, 8, 7, 6, 5, 4),
            () -> checkWebLatest(13, 12, 11, 10, 9, 8, 7, 6, 5, 4),

            // test 56
            this::reloadServer,

            // test 57
            () -> checkApiCode(0),
            () -> checkWebCode(0),
            () -> checkApiCode(1),
            () -> checkWebCode(1),
            () -> checkApiCode(2),
            () -> checkWebCode(2),
            () -> checkApiCode(3),
            () -> checkWebCode(3),
            () -> checkApiCode(4),
            () -> checkWebCode(4),
            () -> checkApiCode(5),
            () -> checkWebCode(5),
            () -> checkApiCode(6),
            () -> checkWebCode(6),
            () -> checkApiCode(7),
            () -> checkWebCode(7),
            () -> checkApiCode(8),
            () -> checkWebCode(8),
            () -> checkApiCode(9),
            () -> checkWebCode(9),
            () -> checkApiCode(10),
            () -> checkWebCode(10),
            () -> checkApiCode(11),
            () -> checkWebCode(11),
            () -> checkApiCode(12),
            () -> checkWebCode(12),
            () -> checkApiCode(13),
            () -> checkWebCode(13),

            // test 85
            () -> checkApiLatest(13, 12, 11, 10, 9, 8, 7, 6, 5, 4),
            () -> checkWebLatest(13, 12, 11, 10, 9, 8, 7, 6, 5, 4),

            // test 87
            () -> postSnippet(14),
            () -> postSnippet(15, 100, 20),
            () -> postSnippet(16),
            () -> postSnippet(17, 0, 5),
            () -> postSnippet(18),
            () -> postSnippet(19, 3, 0),
            () -> postSnippet(20),
            () -> postSnippet(21, 30, 0),

            // test 95
            () -> checkApiCode(14),
            () -> checkWebCode(14),
            () -> checkApiCode(16),
            () -> checkWebCode(16),
            () -> checkApiCode(18),
            () -> checkWebCode(18),
            () -> checkApiCode(20),
            () -> checkWebCode(20),

            // test 103
            () -> {
                freezeTime = System.currentTimeMillis();
                sleep(5000);
                return reloadServer();
            },

            // test 104
            () -> {
                awaitTime = System.currentTimeMillis();
                sleepDurationSec = (awaitTime - freezeTime) / 1000;
                sleepLowerBound = sleepDurationSec;
                sleepUpperBound = sleepLowerBound + 10;
                checkSecret = true;
                return CheckResult.correct();
            },

            // test 105
            () -> checkApiCode(15),
            () -> checkWebCode(15),
            () -> checkApiCode(17),
            () -> checkWebCode(17),
            () -> checkApiCode404(19),
            () -> checkWebCode404(19),
            () -> checkApiCode(21),
            () -> checkWebCode(21),

            // test 113
            () -> checkApiLatest(20, 18, 16, 14, 13, 12, 11, 10, 9, 8),
            () -> checkWebLatest(20, 18, 16, 14, 13, 12, 11, 10, 9, 8),

            // test 115
            () -> checkApiCode(17),
            () -> checkApiCode(17),
            () -> checkWebCode(17),
            () -> checkApiCode404(17),
            () -> checkWebCode404(17),
        };

        private CheckResult checkApiCode(int id) {
            String codeId = ids.get(id);
            String snippet = SNIPPETS[id];
            int time = secs.get(id);
            int views = this.views.get(id);

            HttpResponse resp = get(API_CODE + codeId).send();
            checkStatusCode(resp, 200);

            expect(resp.getContent()).asJson().check(
                isObject()
                    .value("code", snippet)
                    .value("date", isString(s -> {
                        if (dates.containsKey(id)) {
                            return s.equals(dates.get(id));
                        }
                        dates.put(id, s);
                        return true;
                    }))
                    .value("time", isInteger(i -> {
                        if (!checkSecret || time == 0) {
                            return i == 0;
                        }
                        int upperBound = (int) (time - sleepLowerBound);
                        int lowerBound = (int) (time - sleepUpperBound);
                        return i >= lowerBound && i <= upperBound;
                    }))
                    .value("views", isInteger(i -> {
                        if (!checkSecret || views == 0) {
                            return i == 0;
                        }
                        boolean result = i == views - 1;
                        this.views.put(id, views - 1);
                        return result;
                    }))

            );

            return CheckResult.correct();
        }

        private CheckResult checkApiCode404(int id) {
            HttpResponse resp = get(API_CODE + ids.get(id)).send();
            checkStatusCode(resp, 404);
            return CheckResult.correct();
        }

        private CheckResult checkWebCode(int id) {
            String codeId = ids.get(id);
            String apiSnippet = SNIPPETS[id];
            String apiDate = dates.get(id);
            int time = secs.get(id);
            int views = this.views.get(id);

            String req = WEB_CODE + codeId;
            HttpResponse resp = get(req).send();
            checkStatusCode(resp, 200);

            String html = resp.getContent();
            Document doc = Jsoup.parse(html);

            checkTitle(doc, req, "Code");

            Element pre = getById(doc, req, "code_snippet", "pre");
            Element code = getSingleTag(pre, req, "code");

            String webSnippetCode = code.text();
            if (!webSnippetCode.trim().equals(apiSnippet.trim())) {
                return CheckResult.wrong("Web code snippet " +
                    "and api code snippet are different");
            }

            Element date = getById(doc, req, "load_date", "span");
            String webSnippetDate = date.text();
            if (!webSnippetDate.trim().equals(apiDate.trim())) {
                return CheckResult.wrong("Web snippet date " +
                    "and api snippet date are different");
            }

            if (time != 0) {
                Element timeSpan = getById(doc, req, "time_restriction", "span");
                String timeText = timeSpan.text();
                int timeOnPage;
                try {
                    timeOnPage = expect(timeText).toContain(1).integers().get(0);
                } catch (PresentationError ex) {
                    return CheckResult.wrong(
                        "GET " + req + " cannot find number of seconds inside \"time_restriction\" span element.\n" +
                        "Full text:\n" + timeSpan
                    );
                }
                int upperBound = (int) (time - sleepLowerBound);
                int lowerBound = (int) (time - sleepUpperBound);

                if (!(timeOnPage >= lowerBound && timeOnPage <= upperBound)) {
                    return CheckResult.wrong("GET " + req + " should " +
                        "contain time restriction between " + lowerBound
                        + " and " + upperBound + ", found: " + timeOnPage + "\n" +
                        "Full text:\n" + timeSpan);
                }
            } else {
                checkMissingId(doc, req, "time_restriction");
            }

            if (views != 0) {
                Element viewsSpan = getById(doc, req, "views_restriction", "span");
                String viewsText = viewsSpan.text();
                int viewsOnPage = expect(viewsText).toContain(1).integers().get(0);

                if (viewsOnPage != views - 1) {
                    return CheckResult.wrong("GET " + req + " should " +
                        "contain views restriction equal to " + (views - 1)
                        + ", found: " + viewsOnPage + "\n" +
                        "Full text:\n" + viewsSpan);
                }
                this.views.put(id, views - 1);
            } else {
                checkMissingId(doc, req, "views_restriction");
            }

            return CheckResult.correct();
        }

        private CheckResult checkWebCode404(int id) {
            HttpResponse resp = get(WEB_CODE + ids.get(id)).send();
            checkStatusCode(resp, 404);
            return CheckResult.correct();
        }

        private CheckResult checkWebCodeNew() {
            HttpResponse resp = get(WEB_CODE_NEW).send();
            checkStatusCode(resp, 200);

            String html = resp.getContent();
            Document doc = Jsoup.parse(html);

            checkTitle(doc, WEB_CODE_NEW, "Create");

            getById(doc, WEB_CODE_NEW, "code_snippet", "textarea");
            getById(doc, WEB_CODE_NEW, "send_snippet", "button");

            return CheckResult.correct();
        }

        private CheckResult postSnippet(int id) {
            return postSnippet(id, 0, 0);
        }

        private CheckResult postSnippet(int id, int secs, int views) {
            String snippet = SNIPPETS[id];
            this.secs.put(id, secs);
            this.views.put(id, views);

            HttpResponse resp = post(API_CODE_NEW,
                "{\"code\":\"" + snippet + "\", " +
                    "\"time\": " + secs +", " +
                    "\"views\": " + views + "}").send();
            checkStatusCode(resp, 200);

            expect(resp.getContent()).asJson().check(
                isObject()
                    .value("id", isString(i -> {
                        if (i.length() != 36) {
                            return false;
                        }
                        ids.put(id, "" + i);
                        return true;
                    }))
            );

            return CheckResult.correct();
        }

        private CheckResult checkApiLatest(int... ids) {
            String req = API_LATEST;
            HttpResponse resp = get(req).send();
            checkStatusCode(resp, 200);

            expect(resp.getContent()).asJson().check(
                isArray(ids.length, isObject()
                    .value("code", isString())
                    .value("date", isString())
                    .value("time", 0)
                    .value("views", 0)
                )
            );

            JsonArray elem = resp.getJson().getAsJsonArray();
            for (int i = 0; i < ids.length; i++) {
                JsonObject item = elem.get(i).getAsJsonObject();

                String actualSnippet = SNIPPETS[ids[i]];
                String actualDate = dates.get(ids[i]);

                String givenSnippet = item.get("code").getAsString();
                String givenDate = item.get("date").getAsString();

                if (!actualSnippet.equals(givenSnippet)) {
                    return CheckResult.wrong("GET " + req + " " + th(i + 1) +
                        " snippet doesn't match actual snippet.\n" +
                        "Expected:\n" + actualSnippet + "\n" +
                        "Found:\n" + givenSnippet);
                }

                if (!actualDate.equals(givenDate)) {
                    return CheckResult.wrong("GET " + req + " " + th(i + 1) +
                        " snippet's date doesn't match actual snippet's date.\n" +
                        "Expected:\n" + actualDate + "\n" +
                        "Found:\n" + givenDate);
                }
            }

            return CheckResult.correct();
        }

        private CheckResult checkWebLatest(int... ids) {
            String req = WEB_LATEST;
            HttpResponse resp = get(req).send();
            checkStatusCode(resp, 200);

            String html = resp.getContent();
            Document doc = Jsoup.parse(html);

            checkTitle(doc, req, "Latest");

            Elements preList = getElemsByTag(doc, req, "pre", ids.length);
            Elements spanList = getElemsByTag(doc, req, "span", ids.length);

            for (int i = 0; i < ids.length; i++) {
                String apiSnippet = SNIPPETS[ids[i]];
                String apiDate = dates.get(ids[i]);
                Element pre = preList.get(i);

                String webSnippetCode = pre.text();
                if (!webSnippetCode.trim().equals(apiSnippet.trim())) {
                    return CheckResult.wrong("GET " + req + " " + th(i + 1)
                        + " snippet doesn't match " + th(i + 1) + " snippet via api.\n" +
                        "Expected:\n" + apiSnippet + "\n" +
                        "Found:\n" + webSnippetCode);
                }

                Element date = spanList.get(i);
                String webSnippetDate = date.text();
                if (!webSnippetDate.trim().equals(apiDate.trim())) {
                    return CheckResult.wrong("GET " + req + " " + th(i + 1)
                        + " snippet's date doesn't match " + th(i + 1)
                        + " snippet's date via api.\n" +
                        "Expected:\n" + apiDate + "\n" +
                        "Found:\n" + webSnippetDate);
                }
            }

            return CheckResult.correct();
        }

        private CheckResult reloadServer() {
            try {
                reloadSpring();
            } catch (Exception ex) {
                throw new RuntimeException(ex.getMessage());
            }
            return CheckResult.correct();
        }
    }
  learner_created: false
- name: src/resources/static/XLMHttpRequest.js
  visible: true
  text: |2-
     function send() {

        let views = parseInt(document.getElementById("views_restriction").value);
        if(views===0 || isNaN(views)){
            views = -1;
        }

        let object = {
            "code": document.getElementById("code_snippet").value,
            "time": parseInt(document.getElementById("time_restriction").value),
            "views": views
        };
        let json = JSON.stringify(object);

        let xhr = new XMLHttpRequest();
        xhr.open("POST", '/api/code/new', false)
        xhr.setRequestHeader('Content-type', 'application/json; charset=utf-8');
        xhr.send(json);

        if (xhr.status == 200) {
            alert("Success!");
        }
    }
  learner_created: true
- name: src/platform/CodeRepository.java
  visible: true
  text: |
    package platform;

    import org.springframework.data.jpa.repository.Query;
    import org.springframework.data.repository.CrudRepository;
    import org.springframework.stereotype.Repository;

    import java.util.ArrayList;
    import java.util.List;


    @Repository
    public interface CodeRepository extends CrudRepository<CodeSnippet, Integer> {
      ArrayList<CodeSnippet> findTop10ByOrderByDateTimeDesc();
      // select top 10 *  from (select * from CODE_SNIPPET order by Date_Time desc)
    //  @Query("SELECT TOP 10 u FROM CodeSnippet u")
    //  List<CodeSnippet> get10LatestSnippets();
    }
  learner_created: true
- name: src/platform/CodeSnippet.java
  visible: true
  text: |+
    package platform;

    import java.time.LocalDateTime;
    import java.time.format.DateTimeFormatter;

    import org.json.*;

    import javax.persistence.Entity;
    import javax.persistence.GeneratedValue;
    import javax.persistence.GenerationType;
    import javax.persistence.Id;


    @Entity
    public class CodeSnippet {

        @Id
        @GeneratedValue(strategy = GenerationType.AUTO)
        Integer id;

        private String code;
        private String dateTimeStr;
        private LocalDateTime dateTime;

        public CodeSnippet() {}

        public CodeSnippet(String jsonString) {
            String DATE_FORMATTER = "yyyy/MM/dd HH:mm:ss";
            this.setDateTime(LocalDateTime.now());
            this.setDateTimeStr(getDateTime().format(DateTimeFormatter.ofPattern(DATE_FORMATTER)));

            JSONObject obj = new JSONObject(jsonString);
            this.setCode(obj.getString("code"));
        }

        public LocalDateTime getDateTime() {
            return dateTime;
        }

        public void setDateTime(LocalDateTime dateTime) {
            this.dateTime = dateTime;
        }

        public JSONObject getJSON() {
            return makeJson(this.getCode());
        }

        public String getDateTimeStr() {
            return dateTimeStr;
        }

        public void setDateTimeStr(String dateTimeStr) {
            this.dateTimeStr = dateTimeStr;
        }

        public String getCode() {
            return code;
        }

        public void setCode(String code) {
            this.code = code;
        }

        private JSONObject makeJson(String code){
            JSONObject obj = new JSONObject();
            obj.put("code", code);
            obj.put("date", getDateTimeStr());
            return obj;
        }


    }

  learner_created: true
- name: src/resources/templates/snippet_page_latest.ftlh
  visible: true
  learner_created: true
- name: src/platform/FreemarkerConfiguration.java
  visible: true
  text: |
    package platform;

    import freemarker.template.Configuration;
    import freemarker.template.TemplateExceptionHandler;
    import org.springframework.stereotype.Component;
    import java.io.File;

    @Component
    public class FreemarkerConfiguration {
        public String TemplatesFolder = "C:\\Users\\Ivan\\IdeaProjects\\Code_Sharing_Platform\\Code Sharing Platform\\task\\src\\resources\\templates";
        static Configuration  cfg;

        public FreemarkerConfiguration() {
            //Freemarker cfg
            cfg = new Configuration(Configuration.VERSION_2_3_29);
            try {
                cfg.setDirectoryForTemplateLoading(new File(TemplatesFolder));
            } catch (Exception ex) {
                final String dir = System.getProperty("user.dir");
                System.out.println("Current DIR = " + dir);
                System.out.println("Exception: " + ex.getMessage());
            }
            cfg.setDefaultEncoding("UTF-8");
            cfg.setTemplateExceptionHandler(TemplateExceptionHandler.RETHROW_HANDLER);
            cfg.setLogTemplateExceptions(false);
            cfg.setWrapUncheckedExceptions(true);
            cfg.setFallbackOnNullLoopVariable(false);
        }

        public Configuration getCfg(){
            return cfg;
        }

    }
  learner_created: true
- name: src/resources/static/style.css
  visible: true
  text: |-
    #code_snippet
    {
        width:min-content;
        font: 0.8em sans-serif;
        background-color: lightgrey;
        border: gray;
        border-style:solid;
        border-width: 0.5px;
        margin-top: 5px;
        margin-left: 20px;
        padding: 10px 20px 10px 10px;
    }
    #load_date
    {
        padding-left: 10px;
        color:green;
        font: 0.9em sans-serif;
    }
  learner_created: true
- name: src/resources/templates/snippet_page.ftlh
  visible: true
  learner_created: true
- name: src/resources/templates/code_new.ftlh
  visible: true
  learner_created: true
feedback_link: https://hyperskill.org/projects/130/stages/696/implement#comment
status: Failed
feedback:
  message: "Unexpected error in test #103\n\nWe have recorded this bug and will fix\
    \ it soon.\n\nSubmitted via IDE\n\nOS Windows 10\nJava 11.0.9\nVendor JetBrains\
    \ s.r.o.\nTesting library version 8\n\norg.hyperskill.hstest.exception.outcomes.UnexpectedError\r\
    \n\tat org.hyperskill.hstest.stage.SpringTest.reloadSpring(SpringTest.java:175)\r\
    \n\tat CodeSharingPlatformTest.reloadServer(CodeSharingPlatformTest.java:571)\r\
    \n\tat CodeSharingPlatformTest.lambda$new$100(CodeSharingPlatformTest.java:279)\r\
    \n\tat org.hyperskill.hstest.dynamic.input.DynamicTesting.lambda$null$2(DynamicTesting.java:281)\r\
    \n\tat org.hyperskill.hstest.dynamic.input.DynamicTesting$1DynamicTestElement.lambda$null$0(DynamicTesting.java:244)\r\
    \n\tat org.hyperskill.hstest.testing.runner.SpringApplicationRunner.test(SpringApplicationRunner.java:43)\r\
    \n\tat org.hyperskill.hstest.testing.TestRun.test(TestRun.java:87)\r\n\tat org.hyperskill.hstest.stage.StageTest.start(StageTest.java:104)\r\
    \n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\
    \n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\
    \n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\
    \n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\
    \n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\
    \n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\
    \n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)\r\
    \n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\r\
    \n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\r\
    \n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\
    \n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\t\
    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\
    \n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)\r\
    \n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)\r\
    \n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)\r\
    \n\tat org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)\r\
    \n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)\r\
    \n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\
    \n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\
    \n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\r\
    \n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\r\
    \n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\r\
    \n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)\r\
    \n\tat com.sun.proxy.$Proxy2.processTestClass(Unknown Source)\r\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:119)\r\
    \n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\
    \n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\
    \n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\r\
    \n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\r\
    \n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)\r\
    \n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)\r\
    \n\tat org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)\r\
    \n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)\r\
    \n\tat org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)\r\
    \n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\
    \n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\
    \n\tat org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)\r\
    \n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\
    \n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\
    \n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\
    \n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.hyperskill.hstest.stage.SpringTest.startSpring(SpringTest.java:140)\r\
    \n\tat org.hyperskill.hstest.stage.SpringTest.reloadSpring(SpringTest.java:173)\r\
    \n\t... 55 more\r\nCaused by: org.springframework.context.ApplicationContextException:\
    \ Failed to start bean &#39;webServerStartStop&#39;; nested exception is org.springframework.boot.web.server.PortInUseException:\
    \ Port 8889 is already in use\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:185)\r\
    \n\tat org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:53)\r\
    \n\tat org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:360)\r\
    \n\tat org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:158)\r\
    \n\tat org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:122)\r\
    \n\tat org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:895)\r\
    \n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:554)\r\
    \n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)\r\
    \n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)\r\
    \n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)\r\
    \n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\
    \n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\r\
    \n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)\r\
    \n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)\r\
    \n\tat platform.CodeSharingPlatform.main(CodeSharingPlatform.java:49)\r\n\t...\
    \ 61 more\r\nCaused by: org.springframework.boot.web.server.PortInUseException:\
    \ Port 8889 is already in use\r\n\tat org.springframework.boot.web.server.PortInUseException.lambda$throwIfPortBindingException$0(PortInUseException.java:70)\r\
    \n\tat org.springframework.boot.web.server.PortInUseException.lambda$ifPortBindingException$1(PortInUseException.java:85)\r\
    \n\tat org.springframework.boot.web.server.PortInUseException.ifCausedBy(PortInUseException.java:103)\r\
    \n\tat org.springframework.boot.web.server.PortInUseException.ifPortBindingException(PortInUseException.java:82)\r\
    \n\tat org.springframework.boot.web.server.PortInUseException.throwIfPortBindingException(PortInUseException.java:69)\r\
    \n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:228)\r\
    \n\tat org.springframework.boot.web.servlet.context.WebServerStartStopLifecycle.start(WebServerStartStopLifecycle.java:43)\r\
    \n\tat org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:182)\r\
    \n\t... 75 more\r\nCaused by: java.lang.IllegalArgumentException: standardService.connector.startFailed\r\
    \n\tat org.apache.catalina.core.StandardService.addConnector(StandardService.java:231)\r\
    \n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:282)\r\
    \n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:213)\r\
    \n\t... 77 more\r\nCaused by: org.apache.catalina.LifecycleException: Protocol\
    \ handler start failed\r\n\tat org.apache.catalina.connector.Connector.startInternal(Connector.java:1067)\r\
    \n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)\r\n\
    \tat org.apache.catalina.core.StandardService.addConnector(StandardService.java:227)\r\
    \n\t... 79 more\r\nCaused by: java.net.BindException: Address already in use:\
    \ bind\r\n\tat java.base/sun.nio.ch.Net.bind0(Native Method)\r\n\tat java.base/sun.nio.ch.Net.bind(Net.java:455)\r\
    \n\tat java.base/sun.nio.ch.Net.bind(Net.java:447)\r\n\tat java.base/sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:227)\r\
    \n\tat java.base/sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:80)\r\
    \n\tat org.apache.tomcat.util.net.NioEndpoint.initServerSocket(NioEndpoint.java:228)\r\
    \n\tat org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:211)\r\n\t\
    at org.apache.tomcat.util.net.AbstractEndpoint.bindWithCleanup(AbstractEndpoint.java:1141)\r\
    \n\tat org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1227)\r\
    \n\tat org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:592)\r\n\
    \tat org.apache.catalina.connector.Connector.startInternal(Connector.java:1064)\r\
    \n\t... 81 more\r\n\njava.lang.reflect.InvocationTargetException\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\
    \n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\
    \n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.hyperskill.hstest.stage.SpringTest.startSpring(SpringTest.java:140)\r\
    \n\tat org.hyperskill.hstest.stage.SpringTest.reloadSpring(SpringTest.java:173)\r\
    \n\tat CodeSharingPlatformTest.reloadServer(CodeSharingPlatformTest.java:571)\r\
    \n\tat CodeSharingPlatformTest.lambda$new$100(CodeSharingPlatformTest.java:279)\r\
    \n\tat org.hyperskill.hstest.dynamic.input.DynamicTesting.lambda$null$2(DynamicTesting.java:281)\r\
    \n\tat org.hyperskill.hstest.dynamic.input.DynamicTesting$1DynamicTestElement.lambda$null$0(DynamicTesting.java:244)\r\
    \n\tat org.hyperskill.hstest.testing.runner.SpringApplicationRunner.test(SpringApplicationRunner.java:43)\r\
    \n\tat org.hyperskill.hstest.testing.TestRun.test(TestRun.java:87)\r\n\tat org.hyperskill.hstest.stage.StageTest.start(StageTest.java:104)\r\
    \n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\
    \n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\
    \n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\
    \n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\
    \n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\
    \n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\
    \n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)\r\
    \n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\r\
    \n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\r\
    \n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\
    \n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\t\
    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\
    \n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)\r\
    \n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)\r\
    \n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)\r\
    \n\tat org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)\r\
    \n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)\r\
    \n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\
    \n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\
    \n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\r\
    \n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\r\
    \n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\r\
    \n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)\r\
    \n\tat com.sun.proxy.$Proxy2.processTestClass(Unknown Source)\r\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:119)\r\
    \n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\
    \n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\
    \n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\r\
    \n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\r\
    \n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)\r\
    \n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)\r\
    \n\tat org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)\r\
    \n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)\r\
    \n\tat org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)\r\
    \n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\
    \n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\
    \n\tat org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)\r\
    \n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\nCaused by: org.springframework.context.ApplicationContextException:\
    \ Failed to start bean &#39;webServerStartStop&#39;; nested exception is org.springframework.boot.web.server.PortInUseException:\
    \ Port 8889 is already in use\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:185)\r\
    \n\tat org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:53)\r\
    \n\tat org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:360)\r\
    \n\tat org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:158)\r\
    \n\tat org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:122)\r\
    \n\tat org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:895)\r\
    \n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:554)\r\
    \n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)\r\
    \n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)\r\
    \n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)\r\
    \n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\
    \n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\r\
    \n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)\r\
    \n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)\r\
    \n\tat platform.CodeSharingPlatform.main(CodeSharingPlatform.java:49)\r\n\t...\
    \ 61 more\r\nCaused by: org.springframework.boot.web.server.PortInUseException:\
    \ Port 8889 is already in use\r\n\tat org.springframework.boot.web.server.PortInUseException.lambda$throwIfPortBindingException$0(PortInUseException.java:70)\r\
    \n\tat org.springframework.boot.web.server.PortInUseException.lambda$ifPortBindingException$1(PortInUseException.java:85)\r\
    \n\tat org.springframework.boot.web.server.PortInUseException.ifCausedBy(PortInUseException.java:103)\r\
    \n\tat org.springframework.boot.web.server.PortInUseException.ifPortBindingException(PortInUseException.java:82)\r\
    \n\tat org.springframework.boot.web.server.PortInUseException.throwIfPortBindingException(PortInUseException.java:69)\r\
    \n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:228)\r\
    \n\tat org.springframework.boot.web.servlet.context.WebServerStartStopLifecycle.start(WebServerStartStopLifecycle.java:43)\r\
    \n\tat org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:182)\r\
    \n\t... 75 more\r\nCaused by: java.lang.IllegalArgumentException: standardService.connector.startFailed\r\
    \n\tat org.apache.catalina.core.StandardService.addConnector(StandardService.java:231)\r\
    \n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:282)\r\
    \n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:213)\r\
    \n\t... 77 more\r\nCaused by: org.apache.catalina.LifecycleException: Protocol\
    \ handler start failed\r\n\tat org.apache.catalina.connector.Connector.startInternal(Connector.java:1067)\r\
    \n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)\r\n\
    \tat org.apache.catalina.core.StandardService.addConnector(StandardService.java:227)\r\
    \n\t... 79 more\r\nCaused by: java.net.BindException: Address already in use:\
    \ bind\r\n\tat java.base/sun.nio.ch.Net.bind0(Native Method)\r\n\tat java.base/sun.nio.ch.Net.bind(Net.java:455)\r\
    \n\tat java.base/sun.nio.ch.Net.bind(Net.java:447)\r\n\tat java.base/sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:227)\r\
    \n\tat java.base/sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:80)\r\
    \n\tat org.apache.tomcat.util.net.NioEndpoint.initServerSocket(NioEndpoint.java:228)\r\
    \n\tat org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:211)\r\n\t\
    at org.apache.tomcat.util.net.AbstractEndpoint.bindWithCleanup(AbstractEndpoint.java:1141)\r\
    \n\tat org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1227)\r\
    \n\tat org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:592)\r\n\
    \tat org.apache.catalina.connector.Connector.startInternal(Connector.java:1064)\r\
    \n\t... 81 more\n\nPlease find below the output of your program during this failed\
    \ test.\n\n---\n\n\n  .   ____          _            __ _ _\n /\\\\ / ___&#39;_\
    \ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | &#39;_ | &#39;_| | &#39;_ \\/\
    \ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  &#39;  |____|\
    \ .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n ::\
    \ Spring Boot ::        (v2.3.3.RELEASE)\n\n2021-01-24 15:06:33.420  INFO 31948\
    \ --- [    Test worker] platform.CodeSharingPlatform             : Starting CodeSharingPlatform\
    \ on DESKTOP-K0CMCB9 with PID 31948 (started by Ivan in C:\\Users\\Ivan\\IdeaProjects\\\
    Code_Sharing_Platform\\Code Sharing Platform\\task)\n2021-01-24 15:06:33.424 \
    \ INFO 31948 --- [    Test worker] platform.CodeSharingPlatform             :\
    \ No active profile set, falling back to default profiles: default\n2021-01-24\
    \ 15:06:34.734  INFO 31948 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate\
    \ : Bootstrapping Spring Data JPA repositories in DEFERRED mode.\n2021-01-24 15:06:34.808\
    \  INFO 31948 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate :\
    \ Finished Spring Data repository scanning in 62ms. Found 1 JPA repository interfaces.\n\
    2021-01-24 15:06:35.550  INFO 31948 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer\
    \  : Tomcat initialized with port(s): 8889 (http)\n2021-01-24 15:06:35.567  INFO\
    \ 31948 --- [    Test worker] o.apache.catalina.core.StandardService   : Starting\
    \ service [Tomcat]\n2021-01-24 15:06:35.568  INFO 31948 --- [    Test worker]\
    \ org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache\
    \ Tomcat/9.0.37]\n2021-01-24 15:06:35.728  INFO 31948 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]\
    \       : Initializing Spring embedded WebApplicationContext\n2021-01-24 15:06:35.729\
    \  INFO 31948 --- [    Test worker] w.s.c.ServletWebServerApplicationContext :\
    \ Root WebApplicationContext: initialization completed in 2232 ms\n2021-01-24\
    \ 15:06:35.921  INFO 31948 --- [    Test worker] com.zaxxer.hikari.HikariDataSource\
    \       : HikariPool-1 - Starting...\n2021-01-24 15:06:36.195  INFO 31948 ---\
    \ [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 -\
    \ Start completed.\n2021-01-24 15:06:36.206  INFO 31948 --- [    Test worker]\
    \ o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at &#39;/h2-console&#39;.\
    \ Database available at &#39;jdbc:h2:file:../snippets&#39;\n2021-01-24 15:06:36.477\
    \  INFO 31948 --- [    Test worker] o.s.s.concurrent.ThreadPoolTaskExecutor  :\
    \ Initializing ExecutorService &#39;applicationTaskExecutor&#39;\n2021-01-24 15:06:36.557\
    \  INFO 31948 --- [         task-1] o.hibernate.jpa.internal.util.LogHelper  :\
    \ HHH000204: Processing PersistenceUnitInfo [name: default]\n2021-01-24 15:06:36.665\
    \  INFO 31948 --- [         task-1] org.hibernate.Version                    :\
    \ HHH000412: Hibernate ORM core version 5.4.20.Final\n2021-01-24 15:06:36.733\
    \  WARN 31948 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration :\
    \ spring.jpa.open-in-view is enabled by default. Therefore, database queries may\
    \ be performed during view rendering. Explicitly configure spring.jpa.open-in-view\
    \ to disable this warning\n2021-01-24 15:06:36.950  INFO 31948 --- [         task-1]\
    \ o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations\
    \ {5.1.0.Final}\n2021-01-24 15:06:37.155  INFO 31948 --- [         task-1] org.hibernate.dialect.Dialect\
    \            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect\n2021-01-24\
    \ 15:06:38.165  INFO 31948 --- [         task-1] o.h.e.t.j.p.i.JtaPlatformInitiator\
    \       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]\n\
    2021-01-24 15:06:38.179  INFO 31948 --- [         task-1] j.LocalContainerEntityManagerFactoryBean\
    \ : Initialized JPA EntityManagerFactory for persistence unit &#39;default&#39;\n\
    2021-01-24 15:06:38.318  INFO 31948 --- [    Test worker] o.s.b.a.e.web.EndpointLinksResolver\
    \      : Exposing 14 endpoint(s) beneath base path &#39;/actuator&#39;\n2021-01-24\
    \ 15:06:38.386  INFO 31948 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer\
    \  : Tomcat started on port(s): 8889 (http) with context path &#39;&#39;\n2021-01-24\
    \ 15:06:38.388  INFO 31948 --- [    Test worker] DeferredRepositoryInitializationListener\
    \ : Triggering deferred initialization of Spring Data repositories…\n2021-01-24\
    \ 15:06:38.768  INFO 31948 --- [    Test worker] DeferredRepositoryInitializationListener\
    \ : Spring Data repositories initialized!\n2021-01-24 15:06:38.784  INFO 31948\
    \ --- [    Test worker] platform.CodeSharingPlatform             : Started CodeSharingPlatform\
    \ in 5.885 seconds (JVM running for 7.446)\n2021-01-24 15:06:39.209  INFO 31948\
    \ --- [nio-8889-exec-3] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing\
    \ Spring DispatcherServlet &#39;dispatcherServlet&#39;\n2021-01-24 15:06:39.209\
    \  INFO 31948 --- [nio-8889-exec-3] o.s.web.servlet.DispatcherServlet        :\
    \ Initializing Servlet &#39;dispatcherServlet&#39;\n2021-01-24 15:06:39.220  INFO\
    \ 31948 --- [nio-8889-exec-3] o.s.web.servlet.DispatcherServlet        : Completed\
    \ initialization in 10 ms\n2021-01-24 15:06:41.242  INFO 31948 --- [       Thread-6]\
    \ j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory\
    \ for persistence unit &#39;default&#39;\n2021-01-24 15:06:41.244  INFO 31948\
    \ --- [       Thread-6] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down\
    \ ExecutorService &#39;applicationTaskExecutor&#39;\n2021-01-24 15:06:41.246 \
    \ INFO 31948 --- [       Thread-6] com.zaxxer.hikari.HikariDataSource       :\
    \ HikariPool-1 - Shutdown initiated...\n2021-01-24 15:06:41.279  INFO 31948 ---\
    \ [       Thread-6] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 -\
    \ Shutdown completed.\n\n  .   ____          _            __ _ _\n /\\\\ / ___&#39;_\
    \ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | &#39;_ | &#39;_| | &#39;_ \\/\
    \ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  &#39;  |____|\
    \ .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n ::\
    \ Spring Boot ::        (v2.3.3.RELEASE)\n\n2021-01-24 15:06:41.374  INFO 31948\
    \ --- [    Test worker] platform.CodeSharingPlatform             : Starting CodeSharingPlatform\
    \ on DESKTOP-K0CMCB9 with PID 31948 (started by Ivan in C:\\Users\\Ivan\\IdeaProjects\\\
    Code_Sharing_Platform\\Code Sharing Platform\\task)\n2021-01-24 15:06:41.374 \
    \ INFO 31948 --- [    Test worker] platform.CodeSharingPlatform             :\
    \ No active profile set, falling back to default profiles: default\n2021-01-24\
    \ 15:06:41.721  INFO 31948 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate\
    \ : Bootstrapping Spring Data JPA repositories in DEFERRED mode.\n2021-01-24 15:06:41.729\
    \  INFO 31948 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate :\
    \ Finished Spring Data repository scanning in 7ms. Found 1 JPA repository interfaces.\n\
    2021-01-24 15:06:41.834  INFO 31948 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer\
    \  : Tomcat initialized with port(s): 8889 (http)\n2021-01-24 15:06:41.835  INFO\
    \ 31948 --- [    Test worker] o.apache.catalina.core.StandardService   : Starting\
    \ service [Tomcat]\n2021-01-24 15:06:41.836  INFO 31948 --- [    Test worker]\
    \ org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache\
    \ Tomcat/9.0.37]\n2021-01-24 15:06:41.879  INFO 31948 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]\
    \       : Initializing Spring embedded WebApplicationContext\n2021-01-24 15:06:41.879\
    \  INFO 31948 --- [    Test worker] w.s.c.ServletWebServerApplicationContext :\
    \ Root WebApplicationContext: initialization completed in 502 ms\n2021-01-24 15:06:41.943\
    \  INFO 31948 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       :\
    \ HikariPool-2 - Starting...\n2021-01-24 15:06:41.955  INFO 31948 --- [    Test\
    \ worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.\n\
    2021-01-24 15:06:41.956  INFO 31948 --- [    Test worker] o.s.b.a.h2.H2ConsoleAutoConfiguration\
    \    : H2 console available at &#39;/h2-console&#39;. Database available at &#39;jdbc:h2:file:../snippets&#39;\n\
    2021-01-24 15:06:42.008  INFO 31948 --- [    Test worker] o.s.s.concurrent.ThreadPoolTaskExecutor\
    \  : Initializing ExecutorService &#39;applicationTaskExecutor&#39;\n2021-01-24\
    \ 15:06:42.012  INFO 31948 --- [         task-1] o.hibernate.jpa.internal.util.LogHelper\
    \  : HHH000204: Processing PersistenceUnitInfo [name: default]\n2021-01-24 15:06:42.024\
    \  INFO 31948 --- [         task-1] org.hibernate.dialect.Dialect            :\
    \ HHH000400: Using dialect: org.hibernate.dialect.H2Dialect\n2021-01-24 15:06:42.055\
    \  WARN 31948 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration :\
    \ spring.jpa.open-in-view is enabled by default. Therefore, database queries may\
    \ be performed during view rendering. Explicitly configure spring.jpa.open-in-view\
    \ to disable this warning\n2021-01-24 15:06:42.096  INFO 31948 --- [         task-1]\
    \ o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation:\
    \ [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]\n2021-01-24\
    \ 15:06:42.096  INFO 31948 --- [         task-1] j.LocalContainerEntityManagerFactoryBean\
    \ : Initialized JPA EntityManagerFactory for persistence unit &#39;default&#39;\n\
    2021-01-24 15:06:42.294  INFO 31948 --- [    Test worker] o.s.b.a.e.web.EndpointLinksResolver\
    \      : Exposing 14 endpoint(s) beneath base path &#39;/actuator&#39;\n2021-01-24\
    \ 15:06:42.312  INFO 31948 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer\
    \  : Tomcat started on port(s): 8889 (http) with context path &#39;&#39;\n2021-01-24\
    \ 15:06:42.312  INFO 31948 --- [    Test worker] DeferredRepositoryInitializationListener\
    \ : Triggering deferred initialization of Spring Data repositories…\n2021-01-24\
    \ 15:06:42.347  INFO 31948 --- [    Test worker] DeferredRepositoryInitializationListener\
    \ : Spring Data repositories initialized!\n2021-01-24 15:06:42.352  INFO 31948\
    \ --- [    Test worker] platform.CodeSharingPlatform             : Started CodeSharingPlatform\
    \ in 1.016 seconds (JVM running for 11.014)\n2021-01-24 15:06:42.360  INFO 31948\
    \ --- [nio-8889-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing\
    \ Spring DispatcherServlet &#39;dispatcherServlet&#39;\n2021-01-24 15:06:42.360\
    \  INFO 31948 --- [nio-8889-exec-1] o.s.web.servlet.DispatcherServlet        :\
    \ Initializing Servlet &#39;dispatcherServlet&#39;\n2021-01-24 15:06:42.364  INFO\
    \ 31948 --- [nio-8889-exec-1] o.s.web.servlet.DispatcherServlet        : Completed\
    \ initialization in 4 ms\n\n  .   ____          _            __ _ _\n /\\\\ /\
    \ ___&#39;_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | &#39;_ | &#39;_| | &#39;_\
    \ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  &#39;\
    \  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n\
    \ :: Spring Boot ::        (v2.3.3.RELEASE)\n\n2021-01-24 15:06:47.737  INFO 31948\
    \ --- [    Test worker] platform.CodeSharingPlatform             : Starting CodeSharingPlatform\
    \ on DESKTOP-K0CMCB9 with PID 31948 (started by Ivan in C:\\Users\\Ivan\\IdeaProjects\\\
    Code_Sharing_Platform\\Code Sharing Platform\\task)\n2021-01-24 15:06:47.738 \
    \ INFO 31948 --- [    Test worker] platform.CodeSharingPlatform             :\
    \ No active profile set, falling back to default profiles: default\n2021-01-24\
    \ 15:06:48.049  INFO 31948 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate\
    \ : Bootstrapping Spring Data JPA repositories in DEFERRED mode.\n2021-01-24 15:06:48.057\
    \  INFO 31948 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate :\
    \ Finished Spring Data repository scanning in 7ms. Found 1 JPA repository interfaces.\n\
    2021-01-24 15:06:48.149  INFO 31948 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer\
    \  : Tomcat initialized with port(s): 8889 (http)\n2021-01-24 15:06:48.150  INFO\
    \ 31948 --- [    Test worker] o.apache.catalina.core.StandardService   : Starting\
    \ service [Tomcat]\n2021-01-24 15:06:48.151  INFO 31948 --- [    Test worker]\
    \ org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache\
    \ Tomcat/9.0.37]\n2021-01-24 15:06:48.194  INFO 31948 --- [    Test worker] o.a.c.c.C.[Tomcat-1].[localhost].[/]\
    \     : Initializing Spring embedded WebApplicationContext\n2021-01-24 15:06:48.194\
    \  INFO 31948 --- [    Test worker] w.s.c.ServletWebServerApplicationContext :\
    \ Root WebApplicationContext: initialization completed in 454 ms\n2021-01-24 15:06:48.232\
    \  INFO 31948 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       :\
    \ HikariPool-3 - Starting...\n2021-01-24 15:06:48.234  INFO 31948 --- [    Test\
    \ worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Start completed.\n\
    2021-01-24 15:06:48.234  INFO 31948 --- [    Test worker] o.s.b.a.h2.H2ConsoleAutoConfiguration\
    \    : H2 console available at &#39;/h2-console&#39;. Database available at &#39;jdbc:h2:file:../snippets&#39;\n\
    2021-01-24 15:06:48.279  INFO 31948 --- [    Test worker] o.s.s.concurrent.ThreadPoolTaskExecutor\
    \  : Initializing ExecutorService &#39;applicationTaskExecutor&#39;\n2021-01-24\
    \ 15:06:48.283  INFO 31948 --- [         task-1] o.hibernate.jpa.internal.util.LogHelper\
    \  : HHH000204: Processing PersistenceUnitInfo [name: default]\n2021-01-24 15:06:48.295\
    \  INFO 31948 --- [         task-1] org.hibernate.dialect.Dialect            :\
    \ HHH000400: Using dialect: org.hibernate.dialect.H2Dialect\n2021-01-24 15:06:48.309\
    \  WARN 31948 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration :\
    \ spring.jpa.open-in-view is enabled by default. Therefore, database queries may\
    \ be performed during view rendering. Explicitly configure spring.jpa.open-in-view\
    \ to disable this warning\n2021-01-24 15:06:48.361  INFO 31948 --- [         task-1]\
    \ o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation:\
    \ [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]\n2021-01-24\
    \ 15:06:48.362  INFO 31948 --- [         task-1] j.LocalContainerEntityManagerFactoryBean\
    \ : Initialized JPA EntityManagerFactory for persistence unit &#39;default&#39;\n\
    2021-01-24 15:06:48.527  INFO 31948 --- [    Test worker] o.s.b.a.e.web.EndpointLinksResolver\
    \      : Exposing 14 endpoint(s) beneath base path &#39;/actuator&#39;\n2021-01-24\
    \ 15:06:48.543  WARN 31948 --- [    Test worker] ConfigServletWebServerApplicationContext\
    \ : Exception encountered during context initialization - cancelling refresh attempt:\
    \ org.springframework.context.ApplicationContextException: Failed to start bean\
    \ &#39;webServerStartStop&#39;; nested exception is org.springframework.boot.web.server.PortInUseException:\
    \ Port 8889 is already in use\n2021-01-24 15:06:48.544  INFO 31948 --- [    Test\
    \ worker] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory\
    \ for persistence unit &#39;default&#39;\n2021-01-24 15:06:48.545  INFO 31948\
    \ --- [    Test worker] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down\
    \ ExecutorService &#39;applicationTaskExecutor&#39;\n2021-01-24 15:06:48.546 \
    \ INFO 31948 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       :\
    \ HikariPool-3 - Shutdown initiated...\n2021-01-24 15:06:48.550  INFO 31948 ---\
    \ [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 -\
    \ Shutdown completed.\n2021-01-24 15:06:48.560  INFO 31948 --- [    Test worker]\
    \ ConditionEvaluationReportLoggingListener : \n\nError starting ApplicationContext.\
    \ To display the conditions report re-run your application with &#39;debug&#39;\
    \ enabled.\n2021-01-24 15:06:48.563 ERROR 31948 --- [    Test worker] o.s.b.d.LoggingFailureAnalysisReporter\
    \   : \n\n***************************\nAPPLICATION FAILED TO START\n***************************\n\
    \nDescription:\n\nWeb server failed to start. Port 8889 was already in use.\n\n\
    Action:\n\nIdentify and stop the process that&#39;s listening on port 8889 or\
    \ configure this application to listen on another port."
  time: Sun, 24 Jan 2021 12:06:49 UTC
record: -1
